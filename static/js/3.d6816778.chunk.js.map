{"version":3,"sources":["common/HOC/redirectHOC.jsx","components/Content/Dialogs/Dialogs.module.css","components/Content/Dialogs/DialogItem/DialogItem.module.css","components/Content/Dialogs/Message/Message.module.css","components/Content/Dialogs/DialogItem/DialogItem.jsx","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Dialogs/DialogsContainer.jsx"],"names":["redirectHOC","WrappedComp","newComp","this","props","isAuth","to","React","Component","connect","state","auth","module","exports","DialogItem","className","styles","dialogItem","id","item","Message","message","validateMaxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","isRequire","Dialogs","dialogs","dialogItems","map","index","getKey","messages","newMessage","addNewMessage","compose","dispatch","action","suspenseHOC","formData","addNewMessageAC","newDialogField"],"mappings":"0MA4BeA,IAxBK,SAACC,GACjB,IAAMC,EAAO,4JACT,WACI,OACI,mCAEIC,KAAKC,MAAMC,OACX,cAACJ,EAAD,eAAiBE,KAAKC,QACtB,cAAC,IAAD,CAAUE,GAAG,iBAPhB,GAAiBC,IAAMC,WAoBpC,OAAOC,aANiB,SAACC,GACrB,MAAO,CACHL,OAAQK,EAAMC,KAAKN,UAII,GAAxBI,CAA4BP,K,oBCxBvCU,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,WAAa,8B,oBCAlJD,EAAOC,QAAU,CAAC,WAAa,iC,oBCA/BD,EAAOC,QAAU,CAAC,QAAU,2B,oGCWbC,EARI,SAACV,GAClB,OACE,qBAAKW,UAAWC,IAAOC,WAAvB,SACE,cAAC,IAAD,CAASX,GAAE,mBAAcF,EAAMc,GAAG,GAAlC,SAAwCd,EAAMe,U,kBCIrCC,EARC,SAAChB,GACf,OACE,qBAAKW,UAAWC,IAAOK,QAAvB,SACGjB,EAAMiB,W,2CCGPC,EAAsBC,YAAiB,IAevCC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EAbL,SAACrB,GACnB,OACE,uBAAMuB,SAAUvB,EAAMwB,aAAtB,UACI,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAM,iBAAkBC,SAAU,CAACC,IAAUZ,OAE3E,8BACE,6DA4BKa,EApBC,SAAC/B,GACf,OACE,sBAAKW,UAAWC,IAAOoB,QAAvB,UACE,qBAAKrB,UAAWC,IAAOqB,YAAvB,SACKjC,EAAMiC,YAAYC,KAAI,SAACnB,EAAMoB,GAAP,OACrB,cAAC,EAAD,CAAYpB,KAAMA,EAAMD,GAAIqB,GAAYC,YAAOrB,SAGrD,qBAAKJ,UAAWC,IAAOyB,SAAvB,SACKrC,EAAMqC,SAASH,KAAI,SAACjB,EAASkB,GAAV,OAClB,cAAC,EAAD,CAASlB,QAASA,EAASH,GAAIqB,GAAYC,YAAOnB,SAGxD,qBAAKN,UAAWC,IAAO0B,WAAvB,SACE,cAAClB,EAAD,CAAkBG,SAAUvB,EAAMuC,sB,yCCD3BC,4BACXnC,aAhBoB,SAACC,GACrB,MAAO,CACH2B,YAAa3B,EAAM0B,QAAQC,YAC3BI,SAAU/B,EAAM0B,QAAQK,aAIL,SAACI,GACxB,MAAO,CACHF,cAAe,SAACG,GACZD,EAASC,QAOjB9C,IACA+C,IAHWH,EA/BU,SAACxC,GAOtB,OACQ,cAAC,EAAD,CACIuC,cAPU,SAACK,GACnB,IAAIF,EAASG,YAAgBD,EAASE,gBACtC9C,EAAMuC,cAAcG,IAMZT,YAAajC,EAAMiC,YACnBI,SAAUrC,EAAMqC","file":"static/js/3.d6816778.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nconst redirectHOC = (WrappedComp) => {\r\n    const newComp = class extends React.Component {\r\n        render() {\r\n            return (\r\n                <>\r\n                {\r\n                    this.props.isAuth ? \r\n                    <WrappedComp {...this.props}/> :\r\n                    <Redirect to='/login' />\r\n                }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps,{})(newComp)\r\n}\r\n\r\nexport default redirectHOC","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3sv7Q\",\"dialogItems\":\"Dialogs_dialogItems__5d03t\",\"messages\":\"Dialogs_messages__1ED2B\",\"newMessage\":\"Dialogs_newMessage__9snii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__ssiaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1zHis\"};","import  React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={styles.dialogItem}>\r\n      <NavLink to={`/dialogs/${props.id+1}`}>{props.item}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import  React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={styles.message}>\r\n      {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n// const FuncTest = (props) => {\r\n\r\n//   const [state,dispatch] = React.useReducer(reducer,initialState)\r\n//   // const [count,setCount] = React.useState(0)\r\n//   const [count,step] = state\r\n\r\n//   React.useEffect(() => {\r\n//     const id = setInterval(() => {\r\n//       dispatch({type: 'INCREASE_COUNT'})\r\n//     },1000)\r\n//     // return () => {\r\n//     //   clearInterval(id)\r\n//     // }\r\n//   },[dispatch])\r\n\r\n//   return (\r\n//     <div>\r\n//       <span>{count}</span>\r\n//       <input type='text' onChange={(e) => {setStep(e.target.value)}} />\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Field,reduxForm} from 'redux-form'\r\nimport {Textarea} from '../../../common/FormsControls/FormsControls'\r\nimport {isRequire,maxLengthCreator} from '../../../common/validators/validators'\r\nimport getKey from '../../../common/key/createKey'\r\n\r\nconst validateMaxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea} name={'newDialogField'} validate={[isRequire,validateMaxLength50]} />\r\n        </div>\r\n        <div>\r\n          <button>Add new message</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'DialogsForm'})(DialogsForm)\r\n\r\nconst Dialogs = (props) => {\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogItems}>\r\n          {props.dialogItems.map((item, index) => \r\n            <DialogItem item={item} id={index} key={getKey(item)}/>\r\n          )}\r\n      </div>\r\n      <div className={styles.messages}>\r\n          {props.messages.map((message, index) => \r\n            <Message message={message} id={index} key={getKey(message)}/>\r\n          )}\r\n      </div>\r\n      <div className={styles.newMessage}>\r\n        <DialogsReduxForm onSubmit={props.addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport Dialogs from './Dialogs'\r\nimport {addNewMessageAC} from '../../../redux/reducers/dialogs-reducer';\r\nimport {connect} from 'react-redux'\r\nimport redirectHOC from '../../../common/HOC/redirectHOC'\r\nimport suspenseHOC from '../../../common/HOC/suspenseHOC'\r\nimport {compose} from 'redux'\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    const addNewMessage = (formData) => {\r\n        let action = addNewMessageAC(formData.newDialogField);\r\n        props.addNewMessage(action)\r\n    }\r\n\r\n    return (\r\n            <Dialogs \r\n                addNewMessage={addNewMessage} \r\n                dialogItems={props.dialogItems}\r\n                messages={props.messages}\r\n            /> \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogItems: state.dialogs.dialogItems,\r\n        messages: state.dialogs.messages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (action) => {\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    redirectHOC,     // Перенаправление на стр логинизации\r\n    suspenseHOC\r\n)(DialogsContainer)\r\n// export default connect(mapStateToProps,mapDispatchToProps)(redirectHOC(DialogsContainer))"],"sourceRoot":""}