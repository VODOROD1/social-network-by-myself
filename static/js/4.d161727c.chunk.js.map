{"version":3,"sources":["components/Profile/ProfileInfo.module.css","components/Profile/status/Status.module.css","redux/selectors/profile-selector.js","components/Profile/status/Status.jsx","components/Profile/ProfileInfo.jsx","components/Posts/Post/Post.jsx","components/Posts/MyPosts.jsx","components/Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","getProfile","state","stateOfProfilePage","profile","getIsFetching","isFetching","getPosts","posts","connect","status","dispatch","setStatus","thunk","updateStatus","props","React","useState","isEditMode","setIsEditMode","newStatus","setNewStatus","useEffect","setStatusTC","userId","onBlur","e","updateStatusTC","autoFocus","onInput","target","value","type","onDoubleClick","className","styles","ProfileInfo","src","photos","large","alt","ava","descriptionBlock","fullName","lookingForAJobDescription","aboutMe","contacts","vk","github","Post","postText","likesCount","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","fieldValue","name","placeholder","component","Textarea","validate","requairedValid","MyPosts","formData","addNewPost","newPostText","map","post","action","addNewPostAC","Profile","compose","myId","getMyId","setUserProfile","withRouter","withAuthRedirectHOC","setUserId","tempUserId","test","match","params","setUserTC","Preloader"],"mappings":"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","file":"static/js/4.d161727c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__30cnk\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__S52j-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__3YWNw\"};","\r\nexport const getProfile = (state) => {\r\n    return state.stateOfProfilePage.profile\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.stateOfProfilePage.isFetching\r\n}\r\n\r\nexport const getPosts = (state) => {\r\n    return state.stateOfProfilePage.posts\r\n}","import React from 'react'\r\nimport styles from './Status.module.css'\r\nimport {connect} from 'react-redux'\r\nimport {setStatusTC,updateStatusTC} from '../../../redux/profile-reducer'\r\n\r\nconst Status = (props) => {\r\n    const [isEditMode, setIsEditMode] = React.useState(false)\r\n    const [newStatus, setNewStatus] = React.useState()\r\n\r\n    React.useEffect(() => {\r\n        let thunk = setStatusTC(props.userId)\r\n        props.setStatus(thunk)\r\n    }, [props.userId])\r\n\r\n    const offEditMode = (e) => {\r\n        setIsEditMode(false)\r\n        let thunk = updateStatusTC(newStatus)\r\n        props.updateStatus(thunk)\r\n    }\r\n\r\n    const onEditMode = (e) => {\r\n        setIsEditMode(true)\r\n        setNewStatus(e.target.value)\r\n    }\r\n\r\n    const editStatus = (e) => {\r\n        setNewStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <p>\r\n            {isEditMode ? \r\n                <input onBlur={offEditMode} autoFocus={true} onInput={editStatus} type='text' value={newStatus} /> :\r\n                <span onDoubleClick={onEditMode} className={styles.status}>{props.status}</span>\r\n            }\r\n        </p>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.stateOfProfilePage.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        setStatus: function(thunk) {\r\n            dispatch(thunk)\r\n        },\r\n        updateStatus: function(thunk) {\r\n            dispatch(thunk)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProp)(Status)","import  React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Status from './status/Status'\r\n\r\nconst ProfileInfo = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={props.profile.photos.large} \r\n            alt='здесь расположена аватарка' className={styles.ava}/>\r\n      <div className={styles.descriptionBlock}>\r\n        Login - {props.profile.fullName}\r\n        <br></br>\r\n        {props.profile.lookingForAJobDescription}\r\n        <Status userId={props.userId}/>\r\n        About me - {props.profile.aboutMe}\r\n        <br></br>\r\n        <b>Contacts: </b>\r\n        <span>{props.profile.contacts.vk}</span>\r\n        <br></br>\r\n        <span>{props.profile.contacts.github}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import  React from 'react';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <img src='https://pbs.twimg.com/profile_images/460533834547601408/5bbvogtJ.jpeg' alt='ava'/>\r\n      {props.postText}\r\n      <div>\r\n        Like: {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import  React from 'react';\r\nimport Post from './Post/Post';\r\nimport {Field,reduxForm} from 'redux-form'\r\nimport {requairedValid,maxLengthCreator} from '../../common/validation/formValidation'\r\n// import Textarea from '../../common/customFields/Textarea'\r\nimport {Textarea} from '../../common/customFields/CustomFields'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPostForm = (props) => {\r\n  // debugger;\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field fieldValue={'Some val'} name='newPostText' placeholder='Enter your post' component={Textarea} type='text'\r\n        validate={[requairedValid,maxLength10]}/>\r\n        <button>Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPost'})(NewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n  const addNewPost = (formData) => {\r\n    props.addNewPost(formData.newPostText)\r\n  }\r\n  return (\r\n    <div>\r\n      <NewPostReduxForm onSubmit={addNewPost}/>\r\n      {props.posts.map(post => <Post postText={post.postText} \r\n                              likesCount={post.likesCount}/>)}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {addNewPostAC} from '../../redux/profile-reducer';\r\nimport {getPosts} from '../../redux/selectors/profile-selector'\r\n\r\nconst MyPostsContainer = (props) => {\r\n  \r\n  const addNewPost = (newPostText) => {\r\n    let action = addNewPostAC(newPostText)\r\n    props.addNewPost(action)\r\n  }\r\n  return (\r\n    <MyPosts addNewPost={addNewPost}\r\n    posts={props.posts}\r\n    newPostText={props.newPostText} />\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: getPosts(state)\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addNewPost: function (action) {\r\n    dispatch(action)\r\n  },\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyPostsContainer);","import  React from 'react';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPostsContainer from '../Posts/MyPostsContainer.jsx';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} userId={props.userId}/>\r\n      <MyPostsContainer dispatch={props.dispatch} \r\n      stateOfProfilePage={props.stateOfProfilePage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport withAuthRedirectHOC from '../../HOC/withAuthRedirectHOC'\r\nimport {getProfile,getIsFetching} from '../../redux/selectors/profile-selector'\r\nimport {getMyId} from '../../redux/selectors/auth-selector'\r\nimport Profile from './Profile'\r\nimport {setUserTC} from '../../redux/profile-reducer'\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n  \r\n  const [userId,setUserId] = React.useState()\r\n\r\n  React.useEffect(() => {\r\n    let tempUserId\r\n    var isnum = /^\\d+$/.test(props.match.params.userId); // делаем проверку на число\r\n      if(isnum) { \r\n        tempUserId = props.match.params.userId\r\n        setUserId(props.match.params.userId)\r\n      } else {\r\n        tempUserId = props.myId\r\n        setUserId(props.myId)\r\n      }\r\n      let thunk = setUserTC(tempUserId)\r\n      props.setUserProfile(thunk)\r\n  }, [props.match.params.userId])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (props.isFetching) ? <Preloader /> : <Profile profile={props.profile} userId={userId}/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: getProfile(state),\r\n    isFetching: getIsFetching(state),\r\n    myId: getMyId(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUserProfile: (thunk) => {\r\n      dispatch(thunk)\r\n    } \r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withRouter,           // подключаем библиотеку для доступа к поисковой строке\r\n  withAuthRedirectHOC,\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}