{"version":3,"sources":["common/HOC/redirectHOC.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/Content/Profile/ProfileInfo/Status/Profile.module.css","components/Content/Profile/Posts/MyPosts.module.css","components/Content/Profile/ProfileInfo/Status/ProfileStatus.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Posts/Post/Post.jsx","components/Content/Profile/Posts/MyPosts.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["redirectHOC","WrappedComp","newComp","this","props","isAuth","to","React","Component","connect","state","auth","module","exports","ProfileStatus","useState","editMode","setEditMode","status","localStatus","setLocalStatus","useEffect","className","styles","wrapper","onInput","e","target","value","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileInfo","src","profile","photos","large","alt","ava","descriptionBlock","fullName","lookingForAJobDescription","aboutMe","contacts","facebook","twitter","github","Post","postText","likesCount","validateMaxLength30","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","isRequire","MyPosts","console","log","addNewPost","placeholder","posts","map","post","getKey","memo","Profile","compose","preloaderFlag","Boolean","authId","id","dispatch","action","setUserProfile","thunk","setStatus","withRouter","suspenseHOC","userId","userIdFromURL","match","params","thunk1","setUserProfileTC","thunk2","getStatusTC","useCallback","formData","addNewPostAC","newPostText","newStatus","updateStatusTC","Preloader"],"mappings":"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","file":"static/js/4.3cc4ceed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nconst redirectHOC = (WrappedComp) => {\r\n    const newComp = class extends React.Component {\r\n        render() {\r\n            return (\r\n                <>\r\n                {\r\n                    this.props.isAuth ? \r\n                    <WrappedComp {...this.props}/> :\r\n                    <Redirect to='/login' />\r\n                }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps,{})(newComp)\r\n}\r\n\r\nexport default redirectHOC","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__DRX7q\",\"ava\":\"ProfileInfo_ava__2Us0n\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3d576\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Profile_status__DJvC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__H2JTv\"};","import React from 'react'\r\nimport styles from './Profile.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = React.useState(false)\r\n    const [localStatus, setLocalStatus] = React.useState(props.status ? props.status : 'No status')\r\n\r\n    React.useEffect(() => {\r\n        setLocalStatus(props.status)\r\n    },[props.status])\r\n\r\n    const changeLocalStatus = (e) => {\r\n        setLocalStatus(e.target.value)\r\n    }\r\n\r\n    const editModeON = (e) => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const editModeOFF = (e) => {\r\n        setEditMode(false)\r\n        props.updateStatus(localStatus) // отправка нового статуса на сервер\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}> \r\n        {\r\n            editMode ?\r\n            <input onInput={changeLocalStatus} onBlur={editModeOFF} \r\n            autoFocus value={localStatus} className={styles.status}/> :\r\n            <span onDoubleClick={editModeON} className={styles.status}>{\r\n                props.status ? props.status : 'No status now'\r\n            }</span>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import  React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport ProfileStatus from './Status/ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <img src={props.profile.photos.large ? \r\n                props.profile.photos.large :\r\n            'https://wallbox.ru/wallpapers/main2/201742/zakat-more-plaz-tropiki12.jpg'} \r\n            alt='здесь расположена аватарка' className={styles.ava}/>\r\n      <div className={styles.descriptionBlock}>\r\n        {props.profile.fullName}\r\n        <br></br>\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n        {props.profile.lookingForAJobDescription}\r\n        <br></br>\r\n        {props.profile.aboutMe}\r\n        <br></br>\r\n        <div>\r\n          <b>Contacts</b>\r\n          <p>facebook - {props.profile.contacts.facebook}</p>\r\n          <p>twitter - {props.profile.contacts.twitter}</p>\r\n          <p>github - {props.profile.contacts.github}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import  React from 'react';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <img src='https://pbs.twimg.com/profile_images/460533834547601408/5bbvogtJ.jpeg' alt='ava'/>\r\n      {props.postText}\r\n      <div>\r\n        Like: {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport getKey from '../../../../common/key/createKey'\r\nimport {Field,reduxForm} from 'redux-form'\r\nimport {Textarea} from '../../../../common/FormsControls/FormsControls'\r\nimport {isRequire,maxLengthCreator} from '../../../../common/validators/validators'\r\n\r\n\r\nconst validateMaxLength30 = maxLengthCreator(30)\r\n\r\nconst newPostForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            <Field component={Textarea} name={'newPostText'} {...props}\r\n                    validate={[isRequire,validateMaxLength30]}/>\r\n          </div>\r\n          <div>\r\n            <button>Add post</button>\r\n          </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPostForm'})(newPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n  console.log('MyPosts render!')\r\n  return (\r\n    <div className={styles.wrapper}>\r\n        <NewPostReduxForm onSubmit={props.addNewPost} placeholder='Enter your post' />\r\n          \r\n        {props.posts.map(post => <Post postText={post.postText} \r\n                              likesCount={post.likesCount} key={getKey(post.postText)}/>)}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default React.memo(MyPosts);","import  React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './Posts/MyPosts';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} \r\n                  updateStatus={props.updateStatus}/>\r\n      <MyPosts posts={props.posts} \r\n              // newPostText={props.newPostText}\r\n              addNewPost={props.addNewPost}\r\n              // updateNewPostText={props.updateNewPostText}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport Profile from './Profile'\r\nimport {updateNewPostTextAC,addNewPostAC,setUserProfileTC,\r\n        getStatusTC,updateStatusTC} from '../../../redux/reducers/profile-reducer';\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\nimport redirectHOC from '../../../common/HOC/redirectHOC'\r\nimport preloaderHOC from '../../../common/HOC/preloaderHOC'\r\nimport suspenseHOC from '../../../common/HOC/suspenseHOC'\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    React.useEffect(() => {\r\n        let userId = null\r\n        let userIdFromURL = props.match.params.userId // берем из URL\r\n        let authId = props.authId\r\n\r\n        if(userIdFromURL) {\r\n            userId = userIdFromURL\r\n        } else if(authId) {\r\n            userId = authId\r\n        }\r\n        // } else {\r\n        //     userId = 2\r\n        // }\r\n        \r\n        let thunk1 = setUserProfileTC(userId)\r\n        props.setUserProfile(thunk1)\r\n        let thunk2 = getStatusTC(userId)\r\n        props.setStatus(thunk2)     // прокидываем статус с сервера в наш store \r\n    },[props.authId])\r\n\r\n    const addNewPost = React.useCallback((formData) => {\r\n        let action = addNewPostAC(formData.newPostText)\r\n        props.addNewPost(action)\r\n    },[props.addNewPost])\r\n\r\n    // const updateNewPostText = (e) => {\r\n    //     let action = updateNewPostTextAC(e.target.value)\r\n    //     props.updateNewPostText(action)\r\n    // }\r\n\r\n    const updateStatus = (newStatus) => {\r\n        let thunk = updateStatusTC(newStatus)\r\n        props.updateStatus(thunk)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            // props.isAuth ?\r\n\r\n            props.profile ? \r\n            <Profile \r\n                // newPostText={props.newPostText} \r\n                posts={props.posts}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                addNewPost={addNewPost}\r\n                // updateNewPostText={updateNewPostText}\r\n                updateStatus={updateStatus}\r\n            /> :\r\n            <Preloader />\r\n            // :\r\n            // <Redirect to='/login' />\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // newPostText: state.profile.newPostText,\r\n        posts: state.profile.posts,\r\n        profile: state.profile.profile,\r\n        preloaderFlag: !Boolean(state.profile.profile),\r\n        authId: state.auth.id,\r\n        status: state.profile.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        addNewPost: (action) => {dispatch(action)},\r\n        // updateNewPostText: (action) => {dispatch(action)},\r\n        setUserProfile: (thunk) => {dispatch(thunk)},\r\n        updateStatus: (thunk) => {dispatch(thunk)},\r\n        setStatus: (thunk) => {dispatch(thunk)}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProp),\r\n    // redirectHOC,    // Перенаправление на страницу логинизации\r\n    // preloaderHOC,   // Отображение прелоадера\r\n    withRouter,      // получение доступа к URL\r\n    suspenseHOC\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}